/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-05-02 08:46:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bookstore.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import my.book.CategoryDao;
import my.book.CategoryBean;
import java.util.ArrayList;
import my.member.MemberDao;

public final class category_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/bookstore/admin/top.jsp", Long.valueOf(1714635468753L));
    _jspx_dependants.put("/bookstore/admin/bottom.jsp", Long.valueOf(1714636183588L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("my.book.CategoryBean");
    _jspx_imports_classes.add("my.book.CategoryDao");
    _jspx_imports_classes.add("my.member.MemberDao");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	CategoryDao cdao = CategoryDao.getInstance();
	//ArrayList<CategoryBean> lists = cdao.getAllCategory();
	
	int i;
	String[] lev = {"대분류","중분류","소분류"};

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko-kr\">\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"utf-8\">\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("	<title>Main</title>\r\n");
      out.write("	<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.1/font/bootstrap-icons.css\">\r\n");
      out.write("	<style type=\"text/css\">\r\n");
      out.write("		body{\r\n");
      out.write("			font-family: \"Noto Sans KR\", \"Noto Sans\", \"나눔스퀘어 네오\";\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("	\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container w-75\">\r\n");
      out.write("	<!-- nav top -->\r\n");
      out.write("	<header class=\"py-3\">\r\n");
      out.write("		<div class=\"container d-flex flex-wrap justify-content-center\">\r\n");
      out.write("			<!-- 로고 -->\r\n");
      out.write("			<a href=\"");
      out.print( request.getContextPath() );
      out.write("/main.jsp\"\r\n");
      out.write("				class=\"d-flex align-items-center mb-3 mb-lg-0 me-lg-auto link-body-emphasis text-decoration-none\">\r\n");
      out.write("				<img src=\"");
      out.print( request.getContextPath() );
      out.write("/resource/icon/tree-solid.svg\" width=\"30\" height=\"30\"> \r\n");
      out.write("				<span class=\"fs-4 w-25\"><img src=\"");
      out.print( request.getContextPath() );
      out.write("/resource/img/어쩌다산책_본명조.png\" alt=\"어쩌다산책\" class=\"img-fluid\"></span>\r\n");
      out.write("			</a>\r\n");
      out.write("			<!-- 검색 -->\r\n");
      out.write("				<form class=\"d-flex\" role=\"search\">\r\n");
      out.write("					<input class=\"form-control\" type=\"search\" placeholder=\"검색\"\r\n");
      out.write("						aria-label=\"Search\">\r\n");
      out.write("					<button type=\"submit\" style=\"background: none; border: none; width: 50px;\">\r\n");
      out.write("						<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n");
      out.write("							<path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\"/>\r\n");
      out.write("						</svg>\r\n");
      out.write("					</button>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("	</header>\r\n");
      out.write("	\r\n");
      out.write("	<!-- nav bottom -->\r\n");
      out.write("	<nav class=\"py-2  border-bottom\">\r\n");
      out.write("		<div class=\"container d-flex flex-wrap\">\r\n");
      out.write("			<ul class=\"nav me-auto\">\r\n");
      out.write("				<li class=\"nav-item\">\r\n");
      out.write("					<a href=\"category.jsp\" class=\"nav-link link-body-emphasis px-2\">카테고리</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"nav-item\">\r\n");
      out.write("					<a href=\"#\" class=\"nav-link link-body-emphasis px-2\">책</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"nav-item\">\r\n");
      out.write("					<a href=\"#\" class=\"nav-link link-body-emphasis px-2\">회원</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"nav-item\">\r\n");
      out.write("					<a href=\"#\" class=\"nav-link link-body-emphasis px-2\">주문</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"nav-item\">\r\n");
      out.write("					<a href=\"#\" class=\"nav-link link-body-emphasis px-2\">커뮤니티</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"nav-item\">\r\n");
      out.write("					<a href=\"");
      out.print( request.getContextPath() );
      out.write("/main.jsp\"\" class=\"nav-link link-body-emphasis px-2\">사용자 홈</a>\r\n");
      out.write("				</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container py-5 px-5\">\r\n");
      out.write("	<h3 align=\"center\">카테고리 등록</h3><br>\r\n");
      out.write("	<form action=\"cateProc.jsp\" method=\"post\" name=\"findidForm\">\r\n");
      out.write("		<div class=\"row d-flex justify-content-center\">\r\n");
      out.write("	 		<div class=\"col-md-2\">\r\n");
      out.write("	 			<label>상위 카테고리</label>\r\n");
      out.write("			</div>\r\n");
      out.write("	 		<div class=\"col-md-4\">\r\n");
      out.write("				<div class=\"input-group mb-3\">\r\n");
      out.write("					<input type=\"text\" name=\"cname_upper\" class=\"form-control\" onblur=\"upperCheck()\" placeholder=\"없음(대분류시 입력)\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div><br>\r\n");
      out.write("	 	\r\n");
      out.write("	 	<div class=\"row d-flex justify-content-center\">\r\n");
      out.write("	 		<div class=\"col-md-2\">\r\n");
      out.write("	 			<label>카테고리명</label>\r\n");
      out.write("			</div>\r\n");
      out.write("	 		<div class=\"col-md-4\">\r\n");
      out.write("				<div class=\"input-group mb-3\">\r\n");
      out.write("					<input type=\"text\" name=\"cname\" class=\"form-control\" onblur=\"cnameCheck()\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	 	<div class=\"row d-flex justify-content-center my-3\">\r\n");
      out.write("	 		<div class=\"col-md-5 text-center\">\r\n");
      out.write("		 		<button type=\"submit\" class=\"btn btn-dark w-50\" onClick=\"return cnameInputCheck()\">등록</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<h3><br></h3>\r\n");
      out.write("	<h3><br></h3>\r\n");
      out.write("	\r\n");
      out.write("	<h3 align=\"center\">카테고리 목록</h3><br>\r\n");
      out.write("	<div class=\"row d-flex justify-content-left h-100\">\r\n");

		for(i=1; i<=lev.length; i++){
			ArrayList<CategoryBean> lists = cdao.getCategoryByLev(i);

      out.write("\r\n");
      out.write("			<div class=\"col-md-4 text-center\">\r\n");
      out.write("				<table class=\"table\">\r\n");
      out.write("					<thead>\r\n");
      out.write("						<tr>\r\n");
      out.write("						\r\n");
      out.write("							<th scope=\"col\" class=\"table-dark\">");
      out.print( lev[i-1] );
      out.write("</th>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody class=\"table-group-divider\">\r\n");

			for (CategoryBean cb : lists) {

      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>");
      out.print( cb.getCname() );
      out.write("</td>\r\n");
      out.write("						</tr>\r\n");
			} 
      out.write("\r\n");
      out.write("					</tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
		}
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.print( request.getContextPath());
      out.write("/resource/js/jquery.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.print( request.getContextPath());
      out.write("/script.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
